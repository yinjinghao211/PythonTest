
python解释器：
    1 python解释器是c语言实现的
    2 python变量的赋值和释放需要申请和释放内存
    3 python这一系列动作对应于解释器来说是对应c语言操作的malloc和free操作
    4 malloc和free操作对于linux系统操作是系统调用，程序会在内核态和用户态之间切换，解释器执行效率低

python如何优化频繁的小块的内存申请和释放
    python引入了内存池机制和PyObject_Malloc
    1 内存池
        预先在内存中申请一定数量的，大小相等的内存快，申请内存较少（0~256字节），从内存池中分配内存，如果内存不够
        重新申请新的内存空间，这样做显著的优势就是减少内存碎片，提升效率
        内存池中会划分的更为细化，1个256kb的空间称为一个perm，一个perm中有很多4kb的block
        内存池中存在used链表和free链表，来管理多个perm中的block
    2 PyObject_Malloc
        如果申请的内存空间小于256字节，pymalloc直接在内存池中申请空间，大于256字节则会直接执行malloc行为来申请内存空间

python 数据类型
    数字，字符串，列表，元组，字典
python语法
    缩进：python使用缩进来控制代码块和逻辑，同一逻辑层次的语句必须含有相同的缩进
    连接符：'\'
    引号：可以使用单引号双引号和三引号来定义字符串常量，三引号支持多行的字符串
    多个语句构成代码组：':'
    算术运算符：‘**’幂运算；‘%’取余；‘//’商舍去小数点之后的值
    逻辑运算符：and，or，not，与或非